install.packages("tidytuesdayR")
# Housekeeping
tuesdata <- tidytuesdayR::tt_load('2023-09-05')
# Housekeeping
demographics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-05/demographics.csv')
wages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-05/wages.csv')
states <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-05/states.csv')
View(demographics)
unique(demographics$facet)
unique(wages$facet)
unique(states$facet)
library(haven)
install.packages(c("haven", "rvest", "tidyverse", "here"))
library(haven)
library(rvest)
library(tidyverse)
library(here)
working_dir <- here::here("data", "2023", "2023-09-05")
base_url <- "https://www.unionstats.com/"
members_url <- "https://www.unionstats.com/members/members_index.html"
members_dta_urls <- rvest::read_html(members_url) |>
rvest::html_nodes("td:nth-child(4) a") |>
rvest::html_attr("href") |>
rvest::url_absolute(members_url)
# Fix typos
members_dta_urls <- stringr::str_replace_all(members_dta_urls, "wages", "members")
double_public <- which(
members_dta_urls == "https://www.unionstats.com/members/dta/members_public.dta"
)
members_dta_urls[[double_public[[1]]]] <- "https://www.unionstats.com/members/dta/members_priv.dta"
members_data <- purrr::map(
members_dta_urls,
\(url) {
haven::read_dta(url) |>
dplyr::rename(
"sample_size" = "nobs",
"employment" = "empl",
"members" = "member",
"p_members" = "pctmem",
"p_covered" = "pctcov"
) |>
dplyr::mutate(
dplyr::across(
c(year, sample_size),
as.integer
)
) |>
dplyr::mutate(
facet = stringr::str_extract(url, "members_([^.]+)\\.dta", group = 1)
)
}
) |>
purrr::list_rbind() |>
dplyr::mutate(
facet = dplyr::case_match(
facet,
"all" ~ "all wage and salary workers",
"constr" ~ "construction",
"manuf" ~ "manufacturing",
"whole_ret" ~ "wholesale/retail",
"trans_comm_util" ~ "transportation, communication, and utilities",
"fire" ~ "finance, insurance, and real estate",
"serv" ~ "services",
"public_admin" ~ "public administration",
"priv" ~ "private sector: all",
"priv_nonag" ~ "private sector: nonagricultural",
"priv_const" ~ "private sector: construction",
"priv_manuf" ~ "private sector: manufacturing",
"public" ~ "public sector: all",
"fed" ~ "public sector: federal",
"stateg" ~ "public sector: state government",
"localg" ~ "public sector: local government",
"postal" ~ "public sector: postal service",
"police" ~ "public sector: police",
"less_th_coll" ~ "demographics: less than college",
"coll_plus" ~ "demographics: college or more",
"male" ~ "demographics: male",
"fem" ~ "demographics: female",
"wh_male" ~ "demographics: white male",
"wh_fem" ~ "demographics: white female",
"bl_male" ~ "demographics: black male",
"bl_fem" ~ "demographics: black female",
"hisp_male" ~ "demographics: hispanic male",
"hisp_fem" ~ "demographics: hispanic female",
)
)
state_url <- "https://www.unionstats.com/state/dta/state.dta"
state_data <- haven::read_dta(state_url) |>
dplyr::select(
"state_census_code" = "state_cens",
"state",
"sector",
"observations" = "nobs",
"employment" = "empl",
"members" = "member",
"covered",
"p_members" = "pctmem",
"p_covered" = "pctcov",
"state_abbreviation" = "state2",
"year"
) |>
dplyr::mutate(
dplyr::across(
c(state_census_code, observations, year),
as.integer
)
)
wages_url <- "https://www.unionstats.com/wages/wages_index.html"
wages_dta_urls <- rvest::read_html(wages_url) |>
rvest::html_nodes("td:nth-child(4) a") |>
rvest::html_attr("href") |>
rvest::url_absolute(wages_url)
# One of the URLs has a typo on the site.
wages_dta_urls <- stringr::str_replace_all(wages_dta_urls, "members", "wages")
wages_data <- purrr::map(
wages_dta_urls,
\(url) {
haven::read_dta(url) |>
dplyr::select(
"year",
"sample_size" = "nobs_wage",
"wage",
"at_cap" = "atcap",
"union_wage" = "memwage",
"nonunion_wage" = "nonwage",
"union_wage_premium_raw" = "un_wage_prem_raw",
"union_wage_premium_adjusted" = "un_wage_prem_adj"
) |>
dplyr::mutate(
dplyr::across(
c(year, sample_size),
as.integer
)
) |>
dplyr::mutate(
facet = stringr::str_extract(url, "wages_([^.]+)\\.dta", group = 1)
)
}
) |>
purrr::list_rbind() |>
dplyr::mutate(
facet = dplyr::case_match(
facet,
"all" ~ "all wage and salary workers",
"constr" ~ "construction",
"manuf" ~ "manufacturing",
"whole_ret" ~ "wholesale/retail",
"trans_comm_util" ~ "transportation, communication, and utilities",
"fire" ~ "finance, insurance, and real estate",
"serv" ~ "services",
"public_admin" ~ "public administration",
"priv" ~ "private sector: all",
"priv_nonag" ~ "private sector: nonagricultural",
"priv_const" ~ "private sector: construction",
"priv_manuf" ~ "private sector: manufacturing",
"public" ~ "public sector: all",
"fed" ~ "public sector: federal",
"stateg" ~ "public sector: state government",
"localg" ~ "public sector: local government",
"postal" ~ "public sector: postal service",
"police" ~ "public sector: police",
"less_th_coll" ~ "demographics: less than college",
"coll_plus" ~ "demographics: college or more",
"male" ~ "demographics: male",
"fem" ~ "demographics: female",
"wh_male" ~ "demographics: white male",
"wh_fem" ~ "demographics: white female",
"bl_male" ~ "demographics: black male",
"bl_fem" ~ "demographics: black female",
"hisp_male" ~ "demographics: hispanic male",
"hisp_fem" ~ "demographics: hispanic female",
)
)
readr::write_csv(
members_data,
here::here(working_dir, "demographics.csv")
)
View(members_data)
View(state_data)
View(wages_data)
ggplot(data = state_data) +
geom_histogram(aes(members), binwidth = 5)+
facet_wrap(~state_abbreviation)
ggplot(data = state_data, aes(members, color = year)) +
geom_freqpoly(binwidth = 1)+
facet_wrap(~state)
warnings{[]}
warnings()
ggplot(data = state_data, aes(year)) +
geom_line(aes(y=members),color="purple")+
facet_wrap(~state)
ggplot(data = state_data, aes(year,members,state)) +
geom_line()
ggplot(data = state_data, aes(year,members,color=state)) +
geom_line()
